/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.myconcordia.comp5541.scribr;

import ca.myconcordia.comp5541.scribr.db.DatabaseConnection;
import java.sql.Connection;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;
import java.io.File;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.awt.Component;
import java.util.Scanner;
import java.io.FileReader;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;

import java.awt.Desktop;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author sarsingh
 */
public class MainUI extends javax.swing.JFrame implements DocumentListener {

    private static Connection connection;

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        /* attach document listener to jTextArea */
        jTextArea1.getDocument().addDocumentListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel_SideMenu = new javax.swing.JPanel();
        jPanel_WordEdits = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jPanel_SentenceEdits = new javax.swing.JPanel();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jPanel_ParagraphEdits = new javax.swing.JPanel();
        jCheckBox26 = new javax.swing.JCheckBox();
        jCheckBox27 = new javax.swing.JCheckBox();
        jCheckBox28 = new javax.swing.JCheckBox();
        jCheckBox29 = new javax.swing.JCheckBox();
        jCheckBox30 = new javax.swing.JCheckBox();
        jPanel_SectionEdits = new javax.swing.JPanel();
        jCheckBox36 = new javax.swing.JCheckBox();
        jCheckBox37 = new javax.swing.JCheckBox();
        jCheckBox38 = new javax.swing.JCheckBox();
        jCheckBox39 = new javax.swing.JCheckBox();
        jCheckBox40 = new javax.swing.JCheckBox();
        jPanel_ChapterEdits = new javax.swing.JPanel();
        jCheckBox41 = new javax.swing.JCheckBox();
        jCheckBox42 = new javax.swing.JCheckBox();
        jCheckBox43 = new javax.swing.JCheckBox();
        jCheckBox44 = new javax.swing.JCheckBox();
        jCheckBox45 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        MainMenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        FileMenuNew = new javax.swing.JMenuItem();
        FileMenuOpen = new javax.swing.JMenuItem();
        FileMenuSave = new javax.swing.JMenuItem();
        FileMenuQuit = new javax.swing.JMenuItem();
        InsertMenu = new javax.swing.JMenu();
        InsertMenuNewChapter = new javax.swing.JMenuItem();
        InsertMenuNewSection = new javax.swing.JMenuItem();
        UndoMenu = new javax.swing.JMenu();
        UndoMenuSelectedEdits = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        UndoMenuLastChapterEdit = new javax.swing.JMenuItem();
        UndoMenuLastSectionEdit = new javax.swing.JMenuItem();
        UndoMenuLastParagraphEdit = new javax.swing.JMenuItem();
        UndoMenuLastSentenceEdit = new javax.swing.JMenuItem();
        UndoMenuLastWordEdit = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        UndoMenuAllChapterEdits = new javax.swing.JMenuItem();
        UndoMenuAllSectionEdits = new javax.swing.JMenuItem();
        UndoMenuAllParagraphEdits = new javax.swing.JMenuItem();
        UndoMenuAllSentenceEdits = new javax.swing.JMenuItem();
        UndoMenuAllWordEdits = new javax.swing.JMenuItem();
        DeleteMenu = new javax.swing.JMenu();
        DeleteMenuSelectedEdits = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        DeleteMenuAllChapterEdits = new javax.swing.JMenuItem();
        DeleteMenuAllSectionEdits = new javax.swing.JMenuItem();
        DeleteMenuAllParagraphEdits = new javax.swing.JMenuItem();
        DeleteMenuAllSentenceEdits = new javax.swing.JMenuItem();
        DeleteMenuAllWordEdits = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();
        HelpMenuFAQ = new javax.swing.JMenuItem();
        HelpMenuReportBug = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scribr");

        jPanel_SideMenu.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RECENT EDITS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jPanel_WordEdits.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Words", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jCheckBox1.setText("jCheckBox1");

        jCheckBox2.setText("jCheckBox1");

        jCheckBox3.setText("jCheckBox1");

        jCheckBox4.setText("jCheckBox1");

        jCheckBox5.setText("jCheckBox1");

        javax.swing.GroupLayout jPanel_WordEditsLayout = new javax.swing.GroupLayout(jPanel_WordEdits);
        jPanel_WordEdits.setLayout(jPanel_WordEditsLayout);
        jPanel_WordEditsLayout.setHorizontalGroup(
            jPanel_WordEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_WordEditsLayout.setVerticalGroup(
            jPanel_WordEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_WordEditsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_SentenceEdits.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sentences", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jCheckBox16.setText("jCheckBox1");

        jCheckBox17.setText("jCheckBox1");

        jCheckBox18.setText("jCheckBox1");

        jCheckBox19.setText("jCheckBox1");

        jCheckBox20.setText("jCheckBox1");

        javax.swing.GroupLayout jPanel_SentenceEditsLayout = new javax.swing.GroupLayout(jPanel_SentenceEdits);
        jPanel_SentenceEdits.setLayout(jPanel_SentenceEditsLayout);
        jPanel_SentenceEditsLayout.setHorizontalGroup(
            jPanel_SentenceEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jCheckBox16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_SentenceEditsLayout.setVerticalGroup(
            jPanel_SentenceEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SentenceEditsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox20)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_ParagraphEdits.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Paragraphs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jCheckBox26.setText("jCheckBox1");

        jCheckBox27.setText("jCheckBox1");

        jCheckBox28.setText("jCheckBox1");

        jCheckBox29.setText("jCheckBox1");

        jCheckBox30.setText("jCheckBox1");

        javax.swing.GroupLayout jPanel_ParagraphEditsLayout = new javax.swing.GroupLayout(jPanel_ParagraphEdits);
        jPanel_ParagraphEdits.setLayout(jPanel_ParagraphEditsLayout);
        jPanel_ParagraphEditsLayout.setHorizontalGroup(
            jPanel_ParagraphEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jCheckBox26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_ParagraphEditsLayout.setVerticalGroup(
            jPanel_ParagraphEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ParagraphEditsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox30)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_SectionEdits.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sections", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jCheckBox36.setText("jCheckBox1");

        jCheckBox37.setText("jCheckBox1");

        jCheckBox38.setText("jCheckBox1");

        jCheckBox39.setText("jCheckBox1");

        jCheckBox40.setText("jCheckBox1");

        javax.swing.GroupLayout jPanel_SectionEditsLayout = new javax.swing.GroupLayout(jPanel_SectionEdits);
        jPanel_SectionEdits.setLayout(jPanel_SectionEditsLayout);
        jPanel_SectionEditsLayout.setHorizontalGroup(
            jPanel_SectionEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jCheckBox36, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox37, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox38, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox40, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox39, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_SectionEditsLayout.setVerticalGroup(
            jPanel_SectionEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SectionEditsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox40)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_ChapterEdits.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chapters", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jCheckBox41.setText("jCheckBox1");

        jCheckBox42.setText("jCheckBox1");

        jCheckBox43.setText("jCheckBox1");

        jCheckBox44.setText("jCheckBox1");

        jCheckBox45.setText("jCheckBox1");

        javax.swing.GroupLayout jPanel_ChapterEditsLayout = new javax.swing.GroupLayout(jPanel_ChapterEdits);
        jPanel_ChapterEdits.setLayout(jPanel_ChapterEditsLayout);
        jPanel_ChapterEditsLayout.setHorizontalGroup(
            jPanel_ChapterEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jCheckBox41, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
            .addComponent(jCheckBox42, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox43, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox45, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jCheckBox44, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_ChapterEditsLayout.setVerticalGroup(
            jPanel_ChapterEditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ChapterEditsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox45)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_SideMenuLayout = new javax.swing.GroupLayout(jPanel_SideMenu);
        jPanel_SideMenu.setLayout(jPanel_SideMenuLayout);
        jPanel_SideMenuLayout.setHorizontalGroup(
            jPanel_SideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SideMenuLayout.createSequentialGroup()
                .addGroup(jPanel_SideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel_SectionEdits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_ParagraphEdits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_SentenceEdits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_WordEdits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_ChapterEdits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel_SideMenuLayout.setVerticalGroup(
            jPanel_SideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SideMenuLayout.createSequentialGroup()
                .addComponent(jPanel_WordEdits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel_SentenceEdits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel_ParagraphEdits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_SectionEdits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_ChapterEdits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel_SideMenu);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        FileMenu.setText("File");

        FileMenuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        FileMenuNew.setText("New");
        FileMenuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuNewActionPerformed(evt);
            }
        });
        FileMenu.add(FileMenuNew);

        FileMenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        FileMenuOpen.setText("Open");
        FileMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuOpenActionPerformed(evt);
            }
        });
        FileMenu.add(FileMenuOpen);

        FileMenuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        FileMenuSave.setText("Save");
        FileMenuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuSaveActionPerformed(evt);
            }
        });
        FileMenu.add(FileMenuSave);

        FileMenuQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        FileMenuQuit.setText("Quit");
        FileMenuQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuQuitActionPerformed(evt);
            }
        });
        FileMenu.add(FileMenuQuit);

        MainMenuBar.add(FileMenu);

        InsertMenu.setText("Insert");

        InsertMenuNewChapter.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        InsertMenuNewChapter.setText("New Chapter");
        InsertMenuNewChapter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertMenuNewChapterActionPerformed(evt);
            }
        });
        InsertMenu.add(InsertMenuNewChapter);

        InsertMenuNewSection.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        InsertMenuNewSection.setText("New Section");
        InsertMenu.add(InsertMenuNewSection);

        MainMenuBar.add(InsertMenu);

        UndoMenu.setText("Undo");

        UndoMenuSelectedEdits.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        UndoMenuSelectedEdits.setText("Selected Edits");
        UndoMenuSelectedEdits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoMenuSelectedEditsActionPerformed(evt);
            }
        });
        UndoMenu.add(UndoMenuSelectedEdits);
        UndoMenu.add(jSeparator1);

        UndoMenuLastChapterEdit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        UndoMenuLastChapterEdit.setText("Last Chapter Edit");
        UndoMenuLastChapterEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoMenuLastChapterEditActionPerformed(evt);
            }
        });
        UndoMenu.add(UndoMenuLastChapterEdit);

        UndoMenuLastSectionEdit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        UndoMenuLastSectionEdit.setText("Last Section Edit");
        UndoMenu.add(UndoMenuLastSectionEdit);

        UndoMenuLastParagraphEdit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        UndoMenuLastParagraphEdit.setText("Last Paragraph Edit");
        UndoMenu.add(UndoMenuLastParagraphEdit);

        UndoMenuLastSentenceEdit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        UndoMenuLastSentenceEdit.setText("Last Sentence Edit");
        UndoMenu.add(UndoMenuLastSentenceEdit);

        UndoMenuLastWordEdit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        UndoMenuLastWordEdit.setText("Last Word Edit");
        UndoMenu.add(UndoMenuLastWordEdit);
        UndoMenu.add(jSeparator2);

        UndoMenuAllChapterEdits.setText("All Chapter Edits");
        UndoMenu.add(UndoMenuAllChapterEdits);

        UndoMenuAllSectionEdits.setText("All Section Edits");
        UndoMenu.add(UndoMenuAllSectionEdits);

        UndoMenuAllParagraphEdits.setText("All Paragraph Edits");
        UndoMenu.add(UndoMenuAllParagraphEdits);

        UndoMenuAllSentenceEdits.setText("All Sentence Edits");
        UndoMenu.add(UndoMenuAllSentenceEdits);

        UndoMenuAllWordEdits.setText("All Word Edits");
        UndoMenu.add(UndoMenuAllWordEdits);

        MainMenuBar.add(UndoMenu);

        DeleteMenu.setText("Delete");

        DeleteMenuSelectedEdits.setText("Selected Edits");
        DeleteMenuSelectedEdits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteMenuSelectedEditsActionPerformed(evt);
            }
        });
        DeleteMenu.add(DeleteMenuSelectedEdits);
        DeleteMenu.add(jSeparator3);

        DeleteMenuAllChapterEdits.setText("All Chapter Edits");
        DeleteMenu.add(DeleteMenuAllChapterEdits);

        DeleteMenuAllSectionEdits.setText("All Section Edits");
        DeleteMenu.add(DeleteMenuAllSectionEdits);

        DeleteMenuAllParagraphEdits.setText("All Paragraph Edits");
        DeleteMenu.add(DeleteMenuAllParagraphEdits);

        DeleteMenuAllSentenceEdits.setText("All Sentence Edits");
        DeleteMenu.add(DeleteMenuAllSentenceEdits);

        DeleteMenuAllWordEdits.setText("All Word Edits");
        DeleteMenu.add(DeleteMenuAllWordEdits);

        MainMenuBar.add(DeleteMenu);

        HelpMenu.setText("Help");

        HelpMenuFAQ.setText("FAQ");
        HelpMenuFAQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpMenuFAQActionPerformed(evt);
            }
        });
        HelpMenu.add(HelpMenuFAQ);

        HelpMenuReportBug.setText("Report A Bug");
        HelpMenuReportBug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpMenuReportBugActionPerformed(evt);
            }
        });
        HelpMenu.add(HelpMenuReportBug);

        MainMenuBar.add(HelpMenu);

        setJMenuBar(MainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void databaseNoReturnValue(Connection conn, String query){
        try (Statement stmt = conn.createStatement();) {
            stmt.executeUpdate(query);
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private String databaseReturnString(Connection conn, String query, 
                                        String colName){
        try (Statement stmt = conn.createStatement();) {
            ResultSet rs = stmt.executeQuery(query);
            try {
                while (rs.next()) {
                    String val = rs.getString(colName);
                    return val;
                }
            } catch (SQLException ex) {
                Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
     private int databaseReturnInt(Connection conn, String query, 
                                   String colName){
        try (Statement stmt = conn.createStatement();) {
            ResultSet rs = stmt.executeQuery(query);
            try {
                while (rs.next()) {
                    int val = rs.getInt(colName);
                    return val;
                }
            } catch (SQLException ex) {
                Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void FileMenuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuNewActionPerformed
        jTextArea1.setText("");
    }//GEN-LAST:event_FileMenuNewActionPerformed

    private void FileMenuQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_FileMenuQuitActionPerformed

    private void FileMenuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuSaveActionPerformed
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setDialogTitle("Choose destination.");
        jfc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        jfc.showSaveDialog(null);
        try {
            File f = new File(jfc.getSelectedFile().getAbsolutePath());
            FileWriter out = new FileWriter(f);
            out.write(jTextArea1.getText());
            out.close();
        } catch (FileNotFoundException ex) {
            Component f = null;
            JOptionPane.showMessageDialog(f, "File not found.");
        } catch (IOException ex) {
            Component f = null;
            JOptionPane.showMessageDialog(f, "Error.");
        }
    }//GEN-LAST:event_FileMenuSaveActionPerformed

    private void InsertMenuNewChapterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertMenuNewChapterActionPerformed
        // get the text of the chapter
        String s = jTextArea1.getSelectedText();
        // get operationId
        String query1 = "select * from operationTypes where operationType = 'insert'";
        int operationTypeId = databaseReturnInt(MainUI.connection, query1, "operationTypeId");
        String query2 = "select * from constructs where constructType = 'chapter'";
        int constructId = databaseReturnInt(MainUI.connection, query2, "constructId");
        String query3 = "insert into operations (operationTypeId, constructId) values"
                       + "(" + operationTypeId + "," + constructId + ")";
        databaseNoReturnValue(MainUI.connection, query3);
        String query4 = "select * from operations order by createdAt desc limit 1;";
        int operationId = databaseReturnInt(MainUI.connection, query4, "operationId");
        // insert chapter
        String query5 = "insert into chapters (operationId, newValue) values"
                       + "(" + operationId + ", \'" + s + "\');";
        System.out.println(query5);
        databaseNoReturnValue(MainUI.connection, query5);
    }//GEN-LAST:event_InsertMenuNewChapterActionPerformed
    
    private void InsertMenuNewSectionActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        // get the text of the section
        String s = jTextArea1.getSelectedText();
        // get operationId
        String query1 = "select * from operationTypes where operationType = 'insert'";
        int operationTypeId = databaseReturnInt(MainUI.connection, query1, "operationTypeId");
        String query2 = "select * from constructs where constructType = 'section'";
        int constructId = databaseReturnInt(MainUI.connection, query2, "constructId");
        String query3 = "insert into operations (operationTypeId, constructId) values"
                       + "(" + operationTypeId + "," + constructId + ")";
        databaseNoReturnValue(MainUI.connection, query3);
        String query4 = "select * from operations order by createdAt desc limit 1;";
        int operationId = databaseReturnInt(MainUI.connection, query4, "operationId");
        // insert section
        // HOW TO FIND THE Chapter of the section?
        String query5 = "insert into sections (operationId, newValue) values"
                       + "(" + operationId + ", \'" + s + "\');";
        System.out.println(query5);
        databaseNoReturnValue(MainUI.connection, query5);
        System.out.println("hi im dunya");
    } 
    
    private void UndoMenuSelectedEditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoMenuSelectedEditsActionPerformed
        System.out.println("hello i am here");
        // NEED TO FIND OUT HOW TO KNOW WHICH BOXES WERE CHECKED !!!
        String query = "select * from constructs where constructType = 'word'";
        String s = databaseReturnString(MainUI.connection, query, "constructType");
        System.out.println(s);
    }//GEN-LAST:event_UndoMenuSelectedEditsActionPerformed

    private void UndoMenuLastChapterEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoMenuLastChapterEditActionPerformed
        // find last chapter edit
        String query1 = "select c.* from chapters c left join operations o on " 
                      + "c.operationId = o.operationId order by o.createdAt desc limit 1";
        int operationId = databaseReturnInt(MainUI.connection, query1, "operationId");
        int chapterId = databaseReturnInt(MainUI.connection, query1, "chapterId");
        // find the sections in the chapter
        String query2 = "select * from sections where chapterId = " + chapterId;
        int sectionId = databaseReturnInt(MainUI.connection, query2, "sectionId");
        System.out.println(sectionId);
        // find the paragraphs in the chapter
        String query3 = "select * from paragraphs where sectionId IN (" + sectionId + ")";
        int paragraphId = databaseReturnInt(MainUI.connection, query3, "paragraphId");
        // find the sentences in the chapter 
        String query4 = "select * from sentences where paragraphId IN (" + paragraphId + ")";
        int sentenceId = databaseReturnInt(MainUI.connection, query4, "sentenceId");
        // find the words in the chapter
        String query5 = "select * from words where sentenceId IN (" + sentenceId + ")";
        int wordId = databaseReturnInt(MainUI.connection, query4, "wordId");
        
//        if exists(wordId) {
//            String query6 = "delete from words where wordId = " + wordId;
//            databaseNoReturnValue(MainUI.connection, query6);
//        }
//        
//        if sentenceId {
//            String query7 = "delete from sentences where sentenceId = " + sentenceId;
//            databaseNoReturnValue(MainUI.connection, query7);
//        }
//        
//        if paragraphId {
//            String query8 = "delete from paragraphs where paragraphId = " + paragraphId;
//            databaseNoReturnValue(MainUI.connection, query8);
//        }
//        
//        if sectionId {
//            String query9 = "delete from sections where sectionId = " + sectionId;
//            databaseNoReturnValue(MainUI.connection, query9);
//        }
//        
//        String query10 = "delete from chapters where chapterId = " + chapterId;
//        databaseNoReturnValue(MainUI.connection, query10);
    }//GEN-LAST:event_UndoMenuLastChapterEditActionPerformed
    
     private void UndoMenuLastSectionEditActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        // find last section edit
        String query1 = "select * from sections s left join operations s on" 
                      + "c.operationId = o.operationId order by o.createdAt desc limit 1";
        int operationId = databaseReturnInt(MainUI.connection, query1, "operationId");
        int chapterId = databaseReturnInt(MainUI.connection, query1, "sectionId");
        // delete last chapter edit 
        String query2 = "delete from chapters where chapterId = " + chapterId;
        databaseNoReturnValue(MainUI.connection, query2);
        String query3 = "delete from operations where operationId = " + operationId;
        databaseNoReturnValue(MainUI.connection, query3);
    }                                                       

    
    private void DeleteMenuSelectedEditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMenuSelectedEditsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteMenuSelectedEditsActionPerformed

    private void ComboBoxWordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxWordsActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ComboBoxWordsActionPerformed
    // custom handler to handle all BACKSPACE and DELETE events in the application
    
    private void FileMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuOpenActionPerformed
        String ingest = null;
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setDialogTitle("Choose destination.");
        jfc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File f = new File(jfc.getSelectedFile().getAbsolutePath());
            try {
                FileReader read = new FileReader(f);
                Scanner scan = new Scanner(read);
                while (scan.hasNextLine()) {
                    String line = scan.nextLine() + "\n";
                    ingest = ingest + line;
                }
                jTextArea1.setText(ingest);
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_FileMenuOpenActionPerformed

    private void HelpMenuFAQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpMenuFAQActionPerformed
             Desktop desktop = java.awt.Desktop.getDesktop();
        try {
            URI oURL = new URI("https://htmlpreview.github.io/?https://github.com/johnpurcell514/COMP-5541_PROJECT/blob/main/SUPPORT/index.html");
            desktop.browse(oURL);
        } catch (IOException ex) {
            Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_HelpMenuFAQActionPerformed

    private void HelpMenuReportBugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpMenuReportBugActionPerformed
         Desktop desktop = java.awt.Desktop.getDesktop();
        try {
            URI oURL = new URI("https://htmlpreview.github.io/?https://github.com/johnpurcell514/COMP-5541_PROJECT/blob/main/SUPPORT/EmailSupport.html");
            desktop.browse(oURL);
        } catch (IOException ex) {
            Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_HelpMenuReportBugActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* initialize the database */
        MainUI.connection = DatabaseConnection.getConnection();
        
        /* apply Nimbus theme */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {

        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu DeleteMenu;
    private javax.swing.JMenuItem DeleteMenuAllChapterEdits;
    private javax.swing.JMenuItem DeleteMenuAllParagraphEdits;
    private javax.swing.JMenuItem DeleteMenuAllSectionEdits;
    private javax.swing.JMenuItem DeleteMenuAllSentenceEdits;
    private javax.swing.JMenuItem DeleteMenuAllWordEdits;
    private javax.swing.JMenuItem DeleteMenuSelectedEdits;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem FileMenuNew;
    private javax.swing.JMenuItem FileMenuOpen;
    private javax.swing.JMenuItem FileMenuQuit;
    private javax.swing.JMenuItem FileMenuSave;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JMenuItem HelpMenuFAQ;
    private javax.swing.JMenuItem HelpMenuReportBug;
    private javax.swing.JMenu InsertMenu;
    private javax.swing.JMenuItem InsertMenuNewChapter;
    private javax.swing.JMenuItem InsertMenuNewSection;
    private javax.swing.JMenuBar MainMenuBar;
    private javax.swing.JMenu UndoMenu;
    private javax.swing.JMenuItem UndoMenuAllChapterEdits;
    private javax.swing.JMenuItem UndoMenuAllParagraphEdits;
    private javax.swing.JMenuItem UndoMenuAllSectionEdits;
    private javax.swing.JMenuItem UndoMenuAllSentenceEdits;
    private javax.swing.JMenuItem UndoMenuAllWordEdits;
    private javax.swing.JMenuItem UndoMenuLastChapterEdit;
    private javax.swing.JMenuItem UndoMenuLastParagraphEdit;
    private javax.swing.JMenuItem UndoMenuLastSectionEdit;
    private javax.swing.JMenuItem UndoMenuLastSentenceEdit;
    private javax.swing.JMenuItem UndoMenuLastWordEdit;
    private javax.swing.JMenuItem UndoMenuSelectedEdits;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox26;
    private javax.swing.JCheckBox jCheckBox27;
    private javax.swing.JCheckBox jCheckBox28;
    private javax.swing.JCheckBox jCheckBox29;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox30;
    private javax.swing.JCheckBox jCheckBox36;
    private javax.swing.JCheckBox jCheckBox37;
    private javax.swing.JCheckBox jCheckBox38;
    private javax.swing.JCheckBox jCheckBox39;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox40;
    private javax.swing.JCheckBox jCheckBox41;
    private javax.swing.JCheckBox jCheckBox42;
    private javax.swing.JCheckBox jCheckBox43;
    private javax.swing.JCheckBox jCheckBox44;
    private javax.swing.JCheckBox jCheckBox45;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JPanel jPanel_ChapterEdits;
    private javax.swing.JPanel jPanel_ParagraphEdits;
    private javax.swing.JPanel jPanel_SectionEdits;
    private javax.swing.JPanel jPanel_SentenceEdits;
    private javax.swing.JPanel jPanel_SideMenu;
    private javax.swing.JPanel jPanel_WordEdits;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    /* Doucment Listener Overrides */
    @Override
    public void insertUpdate(DocumentEvent ev) {
        
        if(ev.getLength() != 1){
            return;
        }
        
        int pos = ev.getOffset();
        
        String content = "";
        
        try {
            content = jTextArea1.getText(0, pos + 1);
            System.out.println();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        System.out.println(content);
        
        if(content.contains("raj was here")){
            System.out.println("who cares bro");
            content = "";
            return;
        }
    }

    @Override
    public void removeUpdate(DocumentEvent ev) {
        // do nothing
        if(ev.getLength() != 1) {
            return;
        }
    }

    @Override
    public void changedUpdate(DocumentEvent ev) {
        
    }
}
